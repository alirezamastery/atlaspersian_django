# Generated by Django 4.2.4 on 2023-10-23 14:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(blank=True, choices=[('NUMBER', 'Number'), ('SHORT_TEXT', 'Short Text'), ('LONG_TEXT', 'Long Text'), ('BOOLEAN', 'Boolean')], default='NUMBER', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='brand/img')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('percent', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
            ],
        ),
        migrations.CreateModel(
            name='HomeSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='home/slide')),
                ('link', models.CharField(max_length=255)),
                ('alt', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.PositiveBigIntegerField(default=10911, unique=True)),
                ('status', models.CharField(choices=[('PENDING_PAYMENT', 'Pending Payment'), ('CANCELED_USER', 'Canceled User'), ('CANCELED_ADMIN', 'Canceled Admin'), ('PAID', 'Paid'), ('PROCESSING', 'Processing'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('COMPLETED', 'Completed')], default='PENDING_PAYMENT', max_length=255)),
                ('user_note', models.TextField(blank=True, default='')),
                ('is_verified', models.BooleanField(default=False)),
                ('pay_amount', models.PositiveBigIntegerField()),
                ('shipping_cost', models.PositiveBigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='users.address')),
                ('discount_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='shop.discountcode')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('is_active', models.BooleanField(default=True)),
                ('is_taxable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('thumbnail', models.ImageField(upload_to='product/thumbnail')),
                ('score', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('introduction', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SelectorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(choices=[('SIZE', 'Size'), ('COLOR', 'Color')], max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SelectorValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('value', models.CharField(max_length=255, unique=True)),
                ('extra_info', models.TextField(default='')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='values', to='shop.selectortype')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('is_active', models.BooleanField(default=True)),
                ('cost', models.PositiveBigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('inventory', models.PositiveIntegerField()),
                ('max_in_order', models.PositiveIntegerField(default=5)),
                ('discount_percent', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('discount_value', models.PositiveBigIntegerField(default=0)),
                ('raw_price', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(10000)])),
                ('selling_price', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(10000)])),
                ('sale_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='shop.product')),
                ('selector_value', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_variants', to='shop.selectorvalue')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, default='')),
                ('accepted', models.BooleanField(default=False)),
                ('is_private', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='product/img')),
                ('is_main', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='')),
                ('alt', models.CharField(default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('extra_info', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='attribute_values',
            field=models.ManyToManyField(through='shop.ProductAttributeValue', to='shop.attribute'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.category'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.PositiveBigIntegerField()),
                ('date', models.DateTimeField()),
                ('successful', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('REJECTED', 'Rejected'), ('INVALID', 'Invalid'), ('SUCCESS', 'Success'), ('VERIFIED', 'Verified'), ('REFUNDED', 'Refunded')], default='SUCCESS', max_length=255)),
                ('tracking_id', models.CharField(max_length=255, unique=True)),
                ('card_digits', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='shop.paymentmethod')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='shop.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('discount_percent', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('discount_value', models.PositiveBigIntegerField(default=0)),
                ('raw_price', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(10000)])),
                ('selling_price', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(10000)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='shop.order')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='shop.variant')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='pay_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='shop.paymentmethod'),
        ),
        migrations.AddField(
            model_name='order',
            name='ship_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='shop.shippingmethod'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shop_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('text', models.TextField(default='')),
                ('quality_score', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MaxValueValidator(5)])),
                ('worth_buy_score', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.attribute')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='attributes',
            field=models.ManyToManyField(related_name='product_categories', through='shop.CategoryAttribute', to='shop.attribute'),
        ),
        migrations.AddField(
            model_name='category',
            name='brands',
            field=models.ManyToManyField(related_name='categories', through='shop.CategoryBrand', to='shop.brand'),
        ),
        migrations.AddField(
            model_name='category',
            name='selector_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.selectortype'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='shop.attributeunit'),
        ),
        migrations.AddConstraint(
            model_name='variant',
            constraint=models.UniqueConstraint(fields=('product', 'selector_value'), name='unique_product_selector_value'),
        ),
        migrations.AddConstraint(
            model_name='productattributevalue',
            constraint=models.UniqueConstraint(fields=('product', 'attribute'), name='unique_product_attribute_value'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('order', 'variant'), name='unique_order_variant'),
        ),
        migrations.AddConstraint(
            model_name='categorybrand',
            constraint=models.UniqueConstraint(fields=('brand', 'category'), name='unique_category_brand'),
        ),
        migrations.AddConstraint(
            model_name='categoryattribute',
            constraint=models.UniqueConstraint(fields=('category', 'attribute'), name='unique_category_attribute'),
        ),
    ]
